# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BSv7hzpau0eSbAUEh9b99Isn7rnqB9df
"""

n=int(input('enter n value='))
print('given number is',n)
r=n%2
if (r==0):
    print(n,"is an even number")
else:
     print(n,"is an odd number")

age=int(input("enter the age="))
if age>18:
    print("you are eligible for voting")
else:
    print("you are not eligible for voting")

N=int(input("YEAR="))
R=N%4
if (R==0):
    print(N,"IS A LEAP YEAR")
else:
    print(N,"IS NOT A LEAP YEAR")

N=float(input("COST OF THE PRODUCT="))
D=float(input("DISCOUNT IN PERCENTAGE="))
if N>=499:
    M=(D/100)*N
    print("TOTAL COST OF THE PRODUCT=",N-M)
else:
    print("TOTAL COST OF THE PRODUCT=",N)

character=input("enter a character")
if character.isupper():
    print("THE CHARACTER IS UPPER CASE")
elif character.islower():
     print("THE CHARACTER IS LOWER CASE")
else:
    print("NOT UPPER NOT LOWER CASES")

NUMBER=int(input("NUMBER="))
if NUMBER>0:
    print(NUMBER,"IS POSITIVE NUMBER")
else:
    print(NUMBER,"IS NEGATIVE NUMBER")

N=int(input("enter the rows="))
for i in range(1,N+1):
    for j in range(i):
        print('*',end='')
    print()

N=int(input("N="))
for i in range(1,N):
    for j in range(1,N):
        table=i*j
        print(f"{i}*{j}=",table)
    print()

N=int(input("N="))
for p in range(2,N+1):
    c=0
    for i in range(1,p+1):
        if(p%i==0):
            c=c+1
    if(c==2):
        print(p)

N=int(input("N="))
a=0
b=1
for i in range(1,N):
    c=a+b
    print(c)
    a=b
    b=c

def generate_pascals_triangle(n):
    triangle = []

    for i in range(n):
        row = [1] * (i + 1)

        if i > 1:
            for j in range(1, i):
                row[j] = triangle[i - 1][j - 1] + triangle[i - 1][j]

        triangle.append(row)

    return triangle

def print_pascals_triangle(triangle):
    for row in triangle:
        print(" ".join(map(str, row)).center(len(triangle[-1]) * 3))

def main():
    try:
        n = int(input("Enter the number of rows for Pascal's triangle: "))
        if n < 0:
            raise ValueError("Number of rows should be a non-negative integer.")
    except ValueError as e:
        print(f"Error: {e}")
        return

    pascals_triangle = generate_pascals_triangle(n)
    print_pascals_triangle(pascals_triangle)

if __name__ == "__main__":
    main()